// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()

//        mavenCentral()
//        maven { url 'https://maven.fabric.io/public' }
//        maven {url "https://jitpack.io"}

        // maven库
//        def cn = "http://maven.aliyun.com/nexus/content/groups/public/"
//        def abroad = "http://central.maven.org/maven2/"
//        // 先从url中下载jar若没有找到，则在artifactUrls中寻找
//        maven {
//            url cn
//            artifactUrls abroad
//        }
//        maven { url "http://repo1.maven.org/maven2" }
//        maven { url "https://jitpack.io" }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
//        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    demoCompileSdkVersion = 28
    demoBuildToolsVersion = '28.0.2'
    demoMinSdkVersion = 14
    demoTargetSdkVersion = 28
}

def log(String log) {
    println "→→→→→→→→→→ " + log
}

def deleteFile(String path) {
    File file = new File(path);
    if (file.isDirectory()) {
        file.listFiles().each { a ->
            deleteFile(a.getAbsolutePath())
        }
    } else {
        log "删除文件" + file.delete() + ", " + file.getAbsolutePath()
    }
}

String getAndroidSdkDir() {
    Properties props = new Properties()
    props.load(new FileInputStream(project.rootProject.file("local.properties")))
    // 获取android sdk路径
    return props.get('sdk.dir')
}

task testOrder() {
    log getPath()
}